name: CMake CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Cache the Vulkan SDK
      - name: Cache Vulkan SDK
        id: cache-vulkan-sdk
        uses: actions/cache@v2
        with:
          path: ${{ env.USERPROFILE }}\.vcpkg
          key: ${{ runner.os }}-vulkan-sdk-${{ env.VULKAN_SDK_VERSION }}-${{ env.VULKAN_SDK_COMPONENTS }}
          restore-keys: |
            ${{ runner.os }}-vulkan-sdk-

      # Cache vcpkg
      - name: Cache vcpkg
        id: cache-vcpkg
        uses: actions/cache@v2
        with:
          path: vcpkg
          key: ${{ runner.os }}-vcpkg
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: Install Vulkan SDK
        if: steps.cache-vulkan-sdk.outputs.cache-hit != 'true'
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: ${{ env.VULKAN_SDK_VERSION }}
          vulkan-components: ${{ env.VULKAN_SDK_COMPONENTS }}
          vulkan-use-cache: true

      - name: Install vcpkg
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat
          vcpkg integrate install

      - name: Install dependencies
        run: |
          vcpkg install --triplet x64-windows vulkan freetype libpng[apng] harfbuzz fmt libwebp libjpeg-turbo libpng spdlog simdjson gtest libogg ffmpeg libavif curl

      - name: Configure and build project
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE=$GITHUB_WORKSPACE/vcpkg/scripts/buildsystems/vcpkg.cmake
          cmake --build .

      - name: Run tests
        run: |
          cd build
          ctest
